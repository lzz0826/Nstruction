
EXPLAIN 分析查詢語句:
EXPLAIN SELECT * FROM student_info;

在使用索引時用到函數(包含隱式函數 例:VARCHAR 轉 INT) 索引就不會生效

+----+-------------+--------------+--------------+-------+---------------+---------+---------+------+------+----------+-------------+
| id | select_type | table        | partitions   | type  | possible_keys | key     | key_len | ref  | rows | filtered | Extra       |
+----+-------------+--------------+--------------+-------+---------------+---------+---------+------+------+----------+-------------+
|  1 | SIMPLE      | student_info | NULL         | ALL   | NULL          | NULL    | NULL    | NULL |  100 | NULL     | Using where |
+----+-------------+--------------+--------------+-------+---------------+---------+---------+------+------+----------+-------------+

1.id: 查詢的標識符。一個查詢中的每個選擇查詢都會有一個唯一的id。
2.select_type: 查詢的類型。常見的類型有：
    SIMPLE: 簡單查詢，不包含子查詢或 UNION。
    PRIMARY: 最外層的查詢。
    UNION: UNION 中的第二個或後續的查詢。
    UNION RESULT: 使用UNION時臨時表的select_type
    DEPENDENT UNION: UNION 中的第二個或後續的查詢，依賴於外部查詢。
    SUBQUERY: 子查詢中的第一個SELECT。
    DEPENDENT SUBQUERY: 子查詢中的第一個SELECT，依賴於外部查詢。
    DERIVED: 對於派生表的查詢 對應的子查尋 例:select * from (select key1 , count(1) as c from s1 group by key1) as derived_s1 where c > 1
    MATERIALIZED: 子查詢被轉為了物化表
3.table: 查詢中涉及的表。
4.partitions: 显示匹配的分區
5.*type: 連接類型。這是一個非常重要的列，用於判斷查詢的效率。常見的連接類型有(從上到下錶示效率逐漸降低)：
    system: 表只有一行（等於系統表）。
    const: 表最多只有一行匹配，用於主鍵或唯一索引。
    eq_ref: 對每個來自前表的行組合，從表中讀取一行。
    ref: 對匹配某個簡單索引的所有行進行掃描。
    fulltext: 表示全文搜索的查詢。
    ref_or_null: 表示索引鍵值包括 NULL 值，用於查詢中包含了 IS NULL 條件的情況。
    index_merge: 表示使用索引合併優化方法。
    unique_subquery: 表示對於子查詢的唯一索引查找。
    index_subquery: 表示對於子查詢的索引查找。
    range: 檢索指定範圍的行，使用一個索引來選擇行。
    index: 可以使用索引覆蓋 但需要掃描全部的索引紀錄時(要查的字段和條件剛好都在聯合索引內)。
    ALL: 全表掃描。
6.possible_keys: 查詢中可能使用的索引。
7.key: 實際使用的索引。如果沒有使用索引，該列显示 NULL。
8.*key_len: 使用的索引的長度(使用聯合索引的時候)。
9.ref: 显示列與索引的比較。
10.*rows: MySQL 估計要讀取的行數。這是一個粗略的估計，用於評估查詢的開銷。
11.filtered: 表示查詢條件過濾了多少百分比的行。
12.*Extra: 額外的信息。有很多可能的值，例如：
    Using where: MySQL 服務器在存儲引擎檢索行后再進行過濾。
    Using index: MySQL 使用覆蓋索引（只從索引中讀取信息，而不是表數據）。
    Using temporary: MySQL 使用臨時表保存結果。
    Using filesort: MySQL 使用外部文件來排序結果，而不是通過索引。