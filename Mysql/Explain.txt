
EXPLAIN 分析查询语句:
EXPLAIN SELECT * FROM student_info;

+----+-------------+--------------+-------+---------------+---------+---------+------+------+-------------+
| id | select_type | table        | type  | possible_keys | key     | key_len | ref  | rows | Extra       |
+----+-------------+--------------+-------+---------------+---------+---------+------+------+-------------+
|  1 | SIMPLE      | student_info | ALL   | NULL          | NULL    | NULL    | NULL |  100 | Using where |
+----+-------------+--------------+-------+---------------+---------+---------+------+------+-------------+

1.id: 查询的标识符。一个查询中的每个选择查询都会有一个唯一的id。
2.select_type: 查询的类型。常见的类型有：
    SIMPLE: 简单查询，不包含子查询或 UNION。
    PRIMARY: 最外层的查询。
    UNION: UNION 中的第二个或后续的查询。
    DEPENDENT UNION: UNION 中的第二个或后续的查询，依赖于外部查询。
    SUBQUERY: 子查询中的第一个SELECT。
    DEPENDENT SUBQUERY: 子查询中的第一个SELECT，依赖于外部查询。
3.table: 查询中涉及的表。
4.type: 连接类型。这是一个非常重要的列，用于判断查询的效率。常见的连接类型有：
    system: 表只有一行（等于系统表）。
    const: 表最多只有一行匹配，用于主键或唯一索引。
    eq_ref: 对每个来自前表的行组合，从表中读取一行。
    ref: 对匹配某个简单索引的所有行进行扫描。
    range: 检索指定范围的行，使用一个索引来选择行。
    index: 全表扫描，只使用索引（通常比ALL快）。
    ALL: 全表扫描。
5.possible_keys: 查询中可能使用的索引。
6.key: 实际使用的索引。如果没有使用索引，该列显示 NULL。
7.key_len: 使用的索引的长度。
8.ref: 显示列与索引的比较。
9.rows: MySQL 估计要读取的行数。这是一个粗略的估计，用于评估查询的开销。
10.filtered: 表示查询条件过滤了多少百分比的行。
11.Extra: 额外的信息。有很多可能的值，例如：
    Using where: MySQL 服务器在存储引擎检索行后再进行过滤。
    Using index: MySQL 使用覆盖索引（只从索引中读取信息，而不是表数据）。
    Using temporary: MySQL 使用临时表保存结果。
    Using filesort: MySQL 使用外部文件来排序结果，而不是通过索引。