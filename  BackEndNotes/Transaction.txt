

Transaction
-----------------------事務的傳播性（Transaction Propagation)------------------------------

事務的傳播性（Transaction Propagation)
事務的傳播性描述了在多個事務之間操作的方式，特別是在嵌套事務的情境下。在一個事務內，當有多個操作時，這些操作是如何相互影響的。

REQUIRED（默認）：
如果當前存在事務，則加入該事務，否則創建一個新事務。這是默認的事務傳播性。

SUPPORTS：
如果當前存在事務，則加入該事務；如果當前沒有事務，則以非事務方式執行。

MANDATORY：
必須在一個已存在的事務中執行，否則拋出異常。

REQUIRES_NEW：
總是創建一個新的事務。如果當前存在事務，則將當前事務掛起。

NOT_SUPPORTED：
以非事務方式執行。如果當前存在事務，則將當前事務掛起。

NEVER：
必須在非事務方式執行。如果當前存在事務，則拋出異常。


-----------------------隔離級別（Isolation Level）------------------------------

隔離級別（Isolation Level）：
隔離級別描述了在並發環境中多個事務之間的可見性和相互影響程度。隔離級別用於確定一個事務的操作是否能夠被其他事務看到，以及如何處理並發問題。

READ UNCOMMITTED（讀未提交）：
允許事務讀取尚未被其他事務提交的數據。

READ COMMITTED（讀已提交）（默認）：
保證事務只能讀取已經被其他事務提交的數據。

REPEATABLE READ（可重複讀）：
保證在事務內多次讀取相同的數據時，得到的結果是一致的。

SERIALIZABLE（可串行化）：
最高的隔離級別，完全防止不可重複讀取、幽靈讀取和脏讀。

READ SNAPSHOT（SQL Server 特有）：
事務在開始時看到的數據快照將保持不變，即使其他事務對數據進行了修改。

----------------------髒讀（Dirty Read）、不可重複讀（Non-Repeatable Read）和幻讀（Phantom Read）-------------------------------

髒讀（Dirty Read）、重複讀（Non-Repeatable Read）和幻讀（Phantom Read）是在並發事務環境中可能發生的三種不同類型的讀取問題，
這些問題反映了不同層次的隔離性。讓我們來看看這些問題：

1. 髒讀（Dirty Read）：
髒讀發生在一個事務讀取了另一個事務尚未提交的數據，而後來那個事務發生了回滾。這導致一個事務看到了不合法或“髒”的數據。

例子：
事務 A 開始，修改了某些數據。
在事務 A 提交之前，事務 B 開始並讀取了 A 修改的數據。
事務 A 發生回滾。
事務 B 現在看到的數據實際上是無效的。


2. 不可重複讀（Non-Repeatable Read）：
重複讀發生在一個事務內的兩次讀取操作之間，另一個事務對相同的數據進行了修改，導致兩次讀取的結果不一致。

例子：
事務 A 讀取了某些數據。
事務 B 開始，修改了 A 讀取的數據。
事務 A 再次讀取相同的數據，但得到的結果與第一次不同。


3. 幻讀（Phantom Read）：
幻讀發生在一個事務內的兩次查詢之間，另一個事務對數據進行了插入或刪除，導致兩次查詢的結果不一致。

例子：
事務 A 查詢了某個範圍的數據。
事務 B 開始，插入了一條新的數據。
事務 A 再次查詢相同的範圍，但得到的結果包含了事務 B 插入的新數據。


總結：
髒讀（Dirty Read）： 讀取到未提交的數據，可能會看到無效的數據。
重複讀（Non-Repeatable Read）： 在同一事務內，兩次讀取同一數據得到不同的結果。
幻讀（Phantom Read）： 在同一事務內，兩次查詢得到不同的結果，可能包含新插入的數據。

--------------------------各種隔離級別可能導致的讀取問題---------------------------

以下是各種隔離級別可能導致的讀取問題：

1. READ UNCOMMITTED（讀未提交）：
髒讀（Dirty Read）： 允許一個事務讀取到另一個事務尚未提交的數據。
不可重複讀（Non-Repeatable Read）： 在同一事務內，兩次讀取同一數據得到不同的結果。
幻讀（Phantom Read）： 在同一事務內，兩次查詢得到不同的結果，可能包含新插入的數據。

2. READ COMMITTED（讀已提交）：
不可重複讀（Non-Repeatable Read）： 在同一事務內，兩次讀取同一數據得到不同的結果。
幻讀（Phantom Read）： 在同一事務內，兩次查詢得到不同的結果，可能包含新插入的數據。

3. REPEATABLE READ（可重複讀）：
幻讀（Phantom Read）： 在同一事務內，兩次查詢得到不同的結果，可能包含新插入的數據。

4. SERIALIZABLE（可串行化）：
最高級別避免所有問題(效能低)


注意：
隨著隔離級別的提高，確保數據的一致性和可靠性的同時，並發性能可能下降。因此，在選擇隔離級別時，需要權衡一致性和性能的需求。
有些數據庫系統可能支持額外的隔離級別或提供更細粒度的控制，這取決於具體的實現。